{
	"info": {
		"_postman_id": "ea1f0e9a-584b-4e38-a4c3-556e2a86b5b3",
		"name": "HRFO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19896058",
		"_collection_link": "https://blue-sunset-841724.postman.co/workspace/QA_BG~4c6184bc-e12e-4f87-a392-15007878cb9f/collection/26846007-ea1f0e9a-584b-4e38-a4c3-556e2a86b5b3?action=share&source=collection_link&creator=19896058"
	},
	"item": [
		{
			"name": "Community Head",
			"item": [
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"mobile\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/community-head/download?last_sync_time=0&hub_id=1",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"community-head",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "hub_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"data check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql('56');\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"56\",\r\n        \"first_name\": \"Haiti\",\r\n        \"last_name\": \"Sola\",\r\n        \"email\": \"test@gmail.com\",\r\n        \"mobile\": \"08012345678\",\r\n        \"address\": \"Kaduna\",\r\n        \"facial_template\": \"Dummy\",\r\n        \"community_id\": \"2\",\r\n        \"hub_id\": \"1\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos_staging}}/community-head/upload",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"community-head",
								"upload"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Community Recruitment",
			"item": [
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"assigned_staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"start_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"recruitment_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"completion_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"app_version\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-community-recruitment/download?last_sync_time=0&hub_id=2",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-community-recruitment",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "hub_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"assigned_staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"data check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].assigned_staff_id).to.eql(\"T-100x\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"assigned_staff_id\": \"222\",\r\n        \"community_id\": \"1\",\r\n        \"start_date\": \"2020-03-03\",\r\n        \"recruitment_status\": \"Recruited\",\r\n        \"completion_date\": \"2020-03-05\",\r\n        \"app_version\": \"v1.0.1\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/fo-community-recruitment/upload",
							"host": [
								"{{local}}"
							],
							"path": [
								"fo-community-recruitment",
								"upload"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Community Assignment",
			"item": [
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"assigned_staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"assigned_staff_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"delete_flag\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"date_assigned\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"app_version\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"staff_id\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos_staging}}/fo-community-assignment/download?last_sync_time=2020-01-01&hub_id=2",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"fo-community-assignment",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "2020-01-01"
								},
								{
									"key": "hub_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"assigned_staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].assigned_staff_id).to.eql(\"T-100x\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"assigned_staff_id\": \"2228888\",\r\n        \"community_id\": \"1\",\r\n        \"hub_id\":\"2\",\r\n        \"assigned_staff_name\": \"Cuba Sodiq\",\r\n        \"delete_flag\": 0,\r\n        \"date_assigned\": \"2020-03-03\",\r\n        \"app_version\": \"v1.0.1\",\r\n        \"staff_id\": \"T-10006714\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos_staging}}/fo-community-assignment/upload",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"fo-community-assignment",
								"upload"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Prospective Candidate Information",
			"item": [
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"middle_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"phone_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/Prospective-candidate-information/download?last_sync_time=0&hub_id=hub",
							"host": [
								"{{local}}"
							],
							"path": [
								"Prospective-candidate-information",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "hub_id",
									"value": "hub"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"144\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n     {\r\n            \"id\": \"101944447\",\r\n            \"hub_id\": \"1\",\r\n            \"first_name\": \"Alvan\",\r\n            \"middle_name\": \"Binitie\",\r\n            \"last_name\": \"William\",\r\n            \"phone_number\": \"+2347033590768\",\r\n            \"email\": \"alvannwanorim@gmail.com\"\r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos}}/Prospective-candidate-information/upload",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"Prospective-candidate-information",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"middle_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"phone_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/Prospective-candidate-information",
							"host": [
								"{{local}}"
							],
							"path": [
								"Prospective-candidate-information"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Recruitment Information",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test_start_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"location_address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"landmark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"contact_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"items_to_bring\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"organisation_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"other_information\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/fo-recruitment-information",
							"host": [
								"{{local}}"
							],
							"path": [
								"fo-recruitment-information"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"144\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"id\": \"101122293222362443\",\r\n            \"staff_id\": \"T-10\",\r\n            \"hub_id\": \"1\",\r\n            \"test_date\": \"2022-08-28\",\r\n            \"test_start_time\": \"10:34\",\r\n            \"location_name\": \"ikara\",\r\n            \"location_address\": \"23 ikara\",\r\n            \"landmark\": \"string\",\r\n            \"community_name\": \"ikara\",\r\n            \"contact_number\": \"09088876758\",\r\n            \"item_to_bring\": \"items\",\r\n            \"organisation_name\": \"BG\",\r\n            \"other_information\": \"BG\"\r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos_staging}}/fo-recruitment-information/upload",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"fo-recruitment-information",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test_start_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"location_address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"landmark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"contact_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"items_to_bring\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"organisation_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"other_information\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/fo-recruitment-information/download?last_sync_time=0&operator_id=23",
							"host": [
								"{{local}}"
							],
							"path": [
								"fo-recruitment-information",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "operator_id",
									"value": "23"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Interview Information",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test_start_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"location_address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"landmark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"contact_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"items_to_bring\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"organisation_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"other_information\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-interview-information",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-interview-information"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"144\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"id\": \"23344555666644\",\r\n            \"staff_id\": \"T-10\",\r\n            \"operator_id\": \"1\",\r\n            \"interview_date\": \"2020-11-21\",\r\n            \"interview_start_time\": \"10:34\",\r\n            \"location_name\": \"ikara\",\r\n            \"location_address\": \"23 ikara\",\r\n            \"landmark\": \"string\",\r\n            \"community_name\": \"ikara\",\r\n            \"contact_number\": \"09088876758\",\r\n            \"organisation_name\": \"BG\"\r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}/fo-interview-information/upload",
							"host": [
								"{{local}}"
							],
							"path": [
								"fo-interview-information",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"test_start_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"location_address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"landmark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"contact_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"items_to_bring\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"organisation_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"other_information\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}/fo-interview-information/download?last_sync_time=0&operator_id=hub",
							"host": [
								"{{local}}"
							],
							"path": [
								"fo-interview-information",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "operator_id",
									"value": "hub"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Screening Test",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"questions\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"duration\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cut_off_mark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cut_off_adjusted_flag\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"level\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"date_setup\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-screening-test",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-screening-test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"144\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   \r\n    {\r\n            \"id\": \"12344444\",\r\n            \"hub_id\": \"1\",\r\n            \"questions\": \"[{question_id;1}]\",\r\n            \"duration\": 22,\r\n            \"cut_off_mark\":22,\r\n            \"status\": \"23 ikara\",\r\n            \"cut_off_adjusted_flag\": 65,\r\n            \"level\": 1,\r\n            \"date_setup\": \"07/07/2022\"\r\n           \r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos}}/fo-screening-test/upload",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-screening-test",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"questions\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"duration\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cut_off_mark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cut_off_adjusted_flag\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"level\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"date_setup\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{recruitment_base_url}}/fo-screening-test/download?last_sync_time=0&operator_id=2",
							"host": [
								"{{recruitment_base_url}}"
							],
							"path": [
								"fo-screening-test",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "operator_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Information",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"candidate_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"date_of_birth\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"salary\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"gender\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"marital_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"department\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"role\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"manager\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ward\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"mobile\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"means_of_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"address_verified\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"account_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bank_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"guarantor_verified_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_verified_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_comment\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-information",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-information"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"1235\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"candidate_id\": \"FC_32_22091608005066\",\r\n        \"staff_id\": \"334459999\",\r\n        \"first_name\": \"N.C\",\r\n        \"last_name\": \"Alvan\",\r\n        \"date_of_birth\": \"2022-03-22\",\r\n        \"hub_id\": \"23\",\r\n        \"salary\": \"2344400\",\r\n        \"email\": \"alvannwanorim@gmail.com\",\r\n        \"gender\": \"male\",\r\n        \"marital_status\": \"married\",\r\n        \"department\": \"Planning\",\r\n        \"role\": \"Admin\",\r\n        \"manager\": \"alvan\",\r\n        \"ward\": \"IK\",\r\n        \"community\": \"IK\",\r\n        \"mobile\": \"+2348137391422\",\r\n        \"means_of_id\": \"NIN\",\r\n        \"id_number\": \"4567\",\r\n        \"address\": \"23\",\r\n        \"latitude\": \"0\",\r\n        \"longitude\": \"0\",\r\n        \"address_verified\": \"VERIFIED\",\r\n        \"account_number\": \"1234567894\",\r\n        \"bank_name\": \"GT Bank\",\r\n        \"guarantor_verified_status\": false,\r\n        \"community_head_verified_status\": false,\r\n        \"community_head_comment\": \"Hello\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos}}/fo-information/upload",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-information",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"candidate_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"staff_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"date_of_birth\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"salary\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"email\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"gender\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"marital_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"department\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"role\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"manager\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ward\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"mobile\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"means_of_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"address_verified\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"account_number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bank_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"guarantor_verified_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_verified_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_comment\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-information/download?last_sync_time=0&operator_id=1",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-information",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "operator_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Guarantor",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"fo_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"mobile\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"profession\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"facial_template\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"position\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"address_verified\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"verification_video\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"business_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"business_address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"relationship_to_applicant\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"incorrect_information\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"comments\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-guarantor",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-guarantor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"12556\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"125556\",\r\n        \"fo_id\": \"23222\",\r\n        \"first_name\":\"Alvan\",\r\n        \"last_name\":\"Alvan\",\r\n        \"mobile\": \"23445678\",\r\n        \"hub_id\" : \"1\",        \r\n        \"profession\": \"Dev\",\r\n        \"facial_template\": \"RNGyeteyAAA\",\r\n        \"position\": \"string\",\r\n        \"address\": \"string\",\r\n        \"latitude\": \"0\",\r\n        \"longitude\": \"0\",\r\n        \"address_verified\": \"string\",\r\n        \"business_name\": \"string\",\r\n        \"business_address\": \"string\",\r\n        \"relationship_to_applicant\": \"string\",\r\n        \"incorrect_information\": \"string\",\r\n        \"comments\": \"string\",\r\n        \"operator_id\": \"1234\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos}}/fo-guarantor/upload",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-guarantor",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"fo_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"mobile\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"profession\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"facial_template\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"position\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"address_verified\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"verification_video\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"business_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"business_address\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"relationship_to_applicant\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"incorrect_information\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"comments\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-guarantor/download?last_sync_time=0&operator_id=1",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-guarantor",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "operator_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Config",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_cut_off\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_cut_off\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_fallout_rate\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos_staging}}/fo-config",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"fo-config"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"14444\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"id\": \"14454\",\r\n            \"hub_id\": \"2\",\r\n            \"screening_cut_off\": 50,\r\n            \"interview_cut_off\": 50,\r\n            \"interview_fallout_rate\": 50,\r\n            \"operator_id\": \"1244\"\r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{recruitment_base_url}}/fo-config/upload",
							"host": [
								"{{recruitment_base_url}}"
							],
							"path": [
								"fo-config",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_cut_off\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_cut_off\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_fallout_rate\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{recruitment_base_url}}/fo-config/download?last_sync_time=0&operator_id=2",
							"host": [
								"{{recruitment_base_url}}"
							],
							"path": [
								"fo-config",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "operator_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Interviewer",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_cut_off\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_cut_off\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_fallout_rate\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/interviewer",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"interviewer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"14444\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"staff_id\": \"14454\",\r\n            \"operator_id\": \"1244\"\r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos}}/interviewer/upload",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"interviewer",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_cut_off\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_cut_off\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_fallout_rate\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos_staging}}/interviewer/download?last_sync_time=0&operator_id=2",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"interviewer",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "operator_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Candidate",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"mobile\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"qualification\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"facial_template\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_test_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_score\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_test_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"department\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_score\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_status\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-candidate",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-candidate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"123348\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"id\": \"1046dddd\",\r\n            \"hub_id\": \"1\",\r\n            \"first_name\": \"Jite\",\r\n            \"last_name\": \"Onwah\",\r\n            \"mobile\": \"+2347033590768\",\r\n            \"email\":\"jacobchidi45@gmail.com\",\r\n            \"qualification\": \"accepted\",\r\n            \"facial_template\": \"qwertyuiop\",\r\n            \"screening_test_id\": \"12344444\",\r\n            \"screening_test_status\": \"PASS\",\r\n            \"screening_score\": 86,\r\n            \"screening_date\": \"2022-05-10\",\r\n            \"department\": \"Agriculture\",\r\n            \"interview_score\": 60,\r\n            \"interview_date\": \"2022-05-10\",\r\n            \"operator_id\": \"1234\",\r\n            \"country\": \"Nigeria\",\r\n            \"approval_status\": \"yes\"\r\n\r\n\r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos}}/fo-candidate/upload",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-candidate",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"mobile\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"qualification\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"facial_template\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_test_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_score\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_test_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"department\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_score\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_date\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"interview_status\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{recruitment_base_url}}/fo-candidate/download?last_sync_time=0&operator_id=0",
							"host": [
								"{{recruitment_base_url}}"
							],
							"path": [
								"fo-candidate",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "operator_id",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Interview Questions",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"question\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"department\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"answer_guide\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"maximum_mark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"deactivate\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos_staging}}/fo-interview-questions",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"fo-interview-questions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(1544);\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n        {\r\n            \"id\": \"8340\",\r\n            \"question\": \"If you could be in any profession, what would it be and why? \",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Verbal Communication\",\r\n            \"maximum_mark\": 1,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"1339\",\r\n            \"question\": \" What subject did you do best in? \",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Verbal Communication\",\r\n            \"maximum_mark\": 1,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"18118\",\r\n            \"question\": \"What was your favorite subject and why?\",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Verbal Communication\",\r\n            \"maximum_mark\": 1,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"12912\",\r\n            \"question\": \"What was the highest level attained? \",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Verbal Communication\",\r\n            \"maximum_mark\": 1,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"14908\",\r\n            \"question\": \"You are training a farmer on a new agricultural technique. It is important that you conduct that training today; however you have a family emergency. How will you handle the situation? \",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Warning: Candidate leaves the training without informing the farmer.  OR candidate informs the farmer that the training is done while in actuality he just cut the training short to handle the emergency. Good Answer: Candidate explains what is going on, excuses his/her self and promises to get in touch with the farmer to schedule another training day.\",\r\n            \"maximum_mark\": 10,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"14684\",\r\n            \"question\": \"What school did you attend?\",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Verbal Communication\",\r\n            \"maximum_mark\": 1,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"1544\",\r\n            \"question\": \"What would you do for games\",\r\n            \"department\": \"fun\",\r\n            \"answer_guide\": \"A_B_C_D\",\r\n            \"maximum_mark\": 50,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-22T21:48:08.162Z\",\r\n            \"updatedAt\": \"2022-07-25T14:30:04.340Z\"\r\n        },\r\n        {\r\n            \"id\": \"15337\",\r\n            \"question\": \"What websites have you visited on the internet before? \",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Warning: Does not know what a website is, can’t give a list. Good Answer: Facebook, Yahoo, news website, gmail, goal.com, etc\",\r\n            \"maximum_mark\": 3,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"10569\",\r\n            \"question\": \"What can the smartphone do that the other phone cannot do?  \",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Warning: Candidate does not know there is a difference, believes there is the same thing. Good Answer: Candidate knows that a smart phone and feature phone are not the same. Knows that a smart phone has full access to the internet, typically has full key pads, and ability to download applications, ability to watch movies etc.\",\r\n            \"maximum_mark\": 3,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"9342\",\r\n            \"question\": \"you fell sick and you know the illness may keep you out of work for a month, you are responsible for a project for which the due date is in 5weeks. Your absence for a month will affect the completion of the project. How will you handle this?\",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Warning: Candidate does not show concern for the organization. Candidate only cares about getting treated. Good Answer: Candidate shows concern about the organization. Probably suggest to nominate and teach someone the task before going to be treated.\",\r\n            \"maximum_mark\": 3,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"17033\",\r\n            \"question\": \"You are required to be at the CMP at 8:00 AM, it is the harvest season in Babban Gona and you have farmers waiting for you at the CMP to process their maize; however you get a family emergency. How will you handle the situation? \",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Warning: Candidate leaves the CMP without informing the farmer or his/her Supervisor. Good Answer: Candidate explains what is going on, excuses his/her self and promises to get someone to attend to the farmers.\",\r\n            \"maximum_mark\": 3,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        },\r\n        {\r\n            \"id\": \"16408\",\r\n            \"question\": \"What do you know about Babban Gona?\",\r\n            \"department\": \"LML\",\r\n            \"answer_guide\": \"Warning: Candidate knows nothing about Babban Gona. Good Answer: Candidate is able to speak about aspects of Babban Gona. The more  detailed is or her answer is, the better knowledge he or she demonstrates\",\r\n            \"maximum_mark\": 5,\r\n            \"deactivate\": 0,\r\n            \"createdAt\": \"2022-07-21T19:30:00.000Z\",\r\n            \"updatedAt\": \"2022-07-24T08:28:37.369Z\"\r\n        }\r\n    ]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos_staging}}/fo-interview-questions/upload",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"fo-interview-questions",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"question\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"department\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"answer_guide\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"maximum_mark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"deactivate\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-interview-questions/download?last_sync_time=0",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-interview-questions",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Cutoff",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_test_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"current_cutoff\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"recommended_cutoff\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"proposed_cutoff\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"reason\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"approval_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"request_type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"date_logged\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-cutoff-request",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-cutoff-request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"55\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"id\": \"55\",\r\n            \"screening_test_id\": \"T-11\",\r\n            \"hub_id\": \"25\",\r\n            \"current_cutoff\": 70,\r\n            \"recommended_cutoff\": 60,\r\n            \"proposed_cutoff\": 65,\r\n            \"reason\": \"Large failure rate\",\r\n            \"approval_status\": \"Äccepted\",\r\n            \"request_type\": \"approved\",\r\n            \"date_logged\": \"2022-10-06\"\r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos_staging}}/fo-cutoff-request/upload",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"fo-cutoff-request",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_test_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"current_cutoff\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"recommended_cutoff\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"proposed_cutoff\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"reason\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"approval_status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"request_type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"date_logged\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-cutoff-request/download?last_sync_time=0&hub_id=25",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-cutoff-request",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "hub_id",
									"value": "25"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Interview",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_test_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cut_off_mark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cut_off_adjusted_flag\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"imei\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"app_version\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-interview",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-interview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"127\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"id\": \"333335\",\r\n            \"screening_test_id\": \"3\",\r\n            \"cut_off_mark\": 25,\r\n            \"cut_off_adjusted_flag\": 2022,\r\n            \"status\": \"accepted\"\r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos_staging}}/fo-interview/upload",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"fo-interview",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"screening_test_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cut_off_mark\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"cut_adjusted_flag\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"status\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-interview/download?last_sync_time=2022-08-27T07:07:01.000Z&hub_id=2",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-interview",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "2022-08-27T07:07:01.000Z"
								},
								{
									"key": "hub_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Screening Question",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"question\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"image_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"answer\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"options\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"question_category\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"deactivate\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos_staging}}/fo-screening-question",
							"host": [
								"{{agricos_staging}}"
							],
							"path": [
								"fo-screening-question"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"12111\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"id\": 62631,\r\n            \"question\": \"Which of the boxes comes next in the sequence?\",\r\n            \"image_name\": \"Image_10.png\",\r\n            \"answer\": \"c\",\r\n            \"options\": \"a____b____c____d____e\",\r\n            \"question_category\": \"3\",\r\n            \"options_category_id\": \"student\",\r\n            \"deactivate\": 0\r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos}}/fo-screening-question/upload",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-screening-question",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"question\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"image_name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"answer\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"options\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"question_category\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"deactivate\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{recruitment_base_url}}/fo-screening-question/download?last_sync_time=0",
							"host": [
								"{{recruitment_base_url}}"
							],
							"path": [
								"fo-screening-question",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FO Question Category",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"description\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"difficulty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"organization_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-question-category",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-question-category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"2344_000\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n            \"id\": \"2344_000\",\r\n            \"name\": \"Live\",\r\n            \"description\": \"Hell0\",\r\n            \"difficulty\": \"Hard\"\r\n            \r\n        }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos}}/fo-question-category/upload",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-question-category",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"name\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"description\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"difficulty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"organization_id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/fo-question-category/download?last_sync_time=0",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"fo-question-category",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Staff Assignment Settings",
			"item": [
				{
					"name": "Get All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_ref\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_reference_max_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_reference_frequency\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"guarantor_reference_check\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"guarantor_reference_max_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"guarantor_reference_frequency\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"home_registration_check\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"home_registration_max_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"home_registration_frequency\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"means_of_identification\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/staff-assignment-settings",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"staff-assignment-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"id check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data[0].id).to.eql(\"144\");\r",
									"});\r",
									"\r",
									"pm.test(\"message check\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Data sync up successful\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\":\"144\",\r\n        \"hub_id\":\"233\",\r\n        \"community_head_ref\":\"355555\",\r\n        \"community_head_reference_max_time\":\"3433\",\r\n        \"community_head_reference_frequency\":\"2\",\r\n        \"guarantor_reference_check\":\"43344\",\r\n        \"guarantor_reference_max_time\":\"32\",\r\n        \"guarantor_reference_frequency\":\"1\",\r\n        \"home_registration_check\":\"2322\",\r\n        \"home_registration_max_time\":\"22\",\r\n        \"home_registration_frequency\":\"1\",\r\n        \"means_of_identification\":\"4\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{agricos}}/staff-assignment-settings/upload",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"staff-assignment-settings",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Down",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"hub_id\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_ref\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_reference_max_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"community_head_reference_frequency\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"guarantor_reference_check\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"guarantor_reference_max_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"guarantor_reference_frequency\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"home_registration_check\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"home_registration_max_time\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"home_registration_frequency\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"means_of_identification\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{agricos}}/staff-assignment-settings/download?last_sync_time=0&operator_id=233",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"staff-assignment-settings",
								"download"
							],
							"query": [
								{
									"key": "last_sync_time",
									"value": "0"
								},
								{
									"key": "operator_id",
									"value": "233"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Media Upload",
			"item": [
				{
					"name": "Upload",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/alvan/Downloads/fo_offer_letter_FC_32_220916080050.pdf"
								},
								{
									"key": "",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{agricos}}/media-upload/upload?folder=candidates",
							"host": [
								"{{agricos}}"
							],
							"path": [
								"media-upload",
								"upload"
							],
							"query": [
								{
									"key": "folder",
									"value": "candidates"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Google Sheet",
			"item": [
				{
					"name": "Get Docs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "agricos",
			"value": "",
			"type": "string"
		}
	]
}